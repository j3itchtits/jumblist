Posts, Feeds and locations

NOTE - WE NEED TO GET RID OF THE POSTLOCATIONS TABLE - EACH POST NEEDS TO HAVE A LAT/LONG ASSOCIATED WITH IT AND NOT A LIST OF POSSIBLE LOCATIONS.

Assumptions we can make

1. If we find a postcode in the post text then we can use that straight off with any geocoding service (we need to append "UK" to any requests though)
2. Each post has an associated feed id.
3. Each feed has a specific geographic location spread (typically a set of administrative districts - to use the Yahoo Geoplanet terminology)
4. If a post is "offered" then we need to have some sort of location - therefore each feed needs to have also have a default location.
5. If a post is "wanted" then we look for a location in the text - if there is no location available then we mark it with lat/long null and don't show the post on any map.

Steps

1. Combine post title and body text together into single text field.
2. Regex search text in order to identify whether postcode exists - either short or long format.
3. If postcode exists then use BingLocationService to find lat/long.
4. If no postcode exists then we need to proceed to more complicated process.
5. We need a list of possible locations to compare text against - this list needs to be generated from the feed data.
5a. Each feed has an array of WOEIDs and lat/longs (in Yahoo Geoplanet these are likely to be administrative districts) - each WOEID has a list of children (typically towns) associated with it - these children may also have children - we need to combine these lists of children into one list. NB. These WOEIDS and their associated child location lists need to be administered via jumblist admin and stored locally in the database in the FeedLocations table - each feedlocation will have a woeid, lat and long.
6. Loop through list, do a regex search for each location name against the text - all matches are then used to create a set of postlocations.
7. Our result will either be no postlocations, one postlocation or multiple postlocations
7a. If no postlocations then we assign the WOEID of the default town location for the feed and use it for the next stage
7b. If we have one postlocation then we can take this WOEID and use it for the next stage
7c. If we have more than one postlocation then we need to try and find the most specific (the one lowest on the yahoo geoplanet tree) somehow?
8. Perhaps the next step should be to parse the input looking for "road", "rd", "street", "st", "gardens", "avenue", "drive" etc. Then get the previous one and send it to BingLocationService combined with the town name from the feed. eg. var bingLocationService = new BingLocationService( "rodney avenue, hastings, uk". If we don't get a match back then we could try the previous two words. Again, if there is no match then we can fall back on the postlocation in 7.

- Locations - a list of locations (hopefully only one - the nearest possible) created by scanning the title and body? fields and comparing each word to a list from the Locations table - if no locations are found then Display needs to be set to false (NOTE - each location in the locations table needs an associated feedid in order to narrow down the search)


We need a new FeedLocations table to keep track of feeds and locations.

Each feed has multiple locations
Each location can be associated with multiple feeds




