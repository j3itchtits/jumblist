Steps need to import a feed into a database
===========================================

1. Need a class which inherits from IHttpModule. This class is then registered in web.config

2. This service will start up when the site is viewed and keep going. 

3. Every set amount of time, a method is fired which will ...

a. Loop through all the feeds in the database table - feeds

b. Fetch and process each feed - there has to be some kind of feed type that dictates how this step will happen - for each feed we need some kind of SyndicationFeed object which contains a list of items - type discovery (from a type "string" in a db) can be done via .net reflection

This is a 2 step process
- we need the source - this could be HTML, RSS, Atom (or something else?) - it also might need security credentials - a combination of reflection (based on feed type), the feed url and/or the feed username/password should tell us the class we need to use within our FeedSource generic
- we need to process the source to produce a feed (basically a list of feed items) - note both the source and the feed object will be different types depending on the feed type read from the database - reflection based on feed type should tell us the class we need within our FeedOutput generic

eg. 
xml -> source = XmlReader object (eg. FeedSource<XmlReader>)
html -> source = WebRequest object (actually a custom object based on WebRequest which i need to build - eg. FeedSource<HttpRequestResponse>)

xml -> feed = SyndicationFeed (eg. FeedOutput<SyndicationFeed>)
html -> feed = Custom object (broadly similar to SyndicationFeed - ie. a list with items that have certain properties such as id, title, body etc -  eg. FeedOutput<FreecycleYahooGroupFeed>)

We then need a container class (eg. FeedContainer) with 2 properties - Source and Feed

c. Foreach item in list - we need to figure out whether a copy already exists in the database
d. If there is no copy then we need to create a Post object and map the item to the Post

Fields that need some more thought
- ParentId - how do we recognise an item that has already been posted (ie. a follow-up post indicating an item has been taken)
- PostCategoryId - we need a method which scans each word in the Title field and returns a PostCategory depending on whether it finds "Wanted", "Offered" or "Taken". (if it is "Taken" then we can find the original item and assign a ParentId
- Display - if there are any issues that need processing in the Admin section then Display needs to be set to false and an email sent out
- Latitude/Longtitude - we need a remote query to microsoft/google maps with the location information - returning a lat/long object
- UserId - we need to take the item.Author field and use it to either find an existing user or add a new user (NO - WE WANT TO KEEP YAHOO REFERENCES TO A MINIMUM - THE USER IS ONLY SET IF THE ITEM HAS BEEN ADDED BY A JUMBLIST USER VIA THE "ADD ITEM" PAGE)
- FeedId - fairly straitforward
- Tags - a list of tags created by scanning the title and body fields and comparing each word to a list from the Tags table - if no tags are found then Display needs to be set to false
- Locations - a list of locations (hopefully only one - the nearest possible) created by scanning the title and body? fields and comparing each word to a list from the Locations table - if no locations are found then Display needs to be set to false (NOTE - each location in the locations table needs an associated feedid in order to narrow down the search)


e. Save each (new) item to the database



RSS Field                   Database Field

title                       PostTitle
link                        PostUrl
description                 PostBody
pubdate                     PostDateTime
guid                        PostGuid

This is useful
http://msdn.microsoft.com/en-us/library/system.servicemodel.syndication.syndicationitem.aspx

==========

RSS Feeds

http://newsrss.bbc.co.uk/rss/newsonline_uk_edition/front_page/rss.xml
http://www.techmeme.com/firehose.xml
http://search.twitter.com/search.rss?q=haiti

==========

Yahoo Freecycle pages


example from below

title = WANTED childrens puzzles                      
link = http://groups.yahoo.com/group/hastings-freecycle/message/39580
description = hello there does anyone have any childrens puzzles? my 2 daughters are loving puzzles at the moment. i have searched the charity shops and not found any.
pubdate = Jan&nbsp;21,&nbsp;2010 1:20&nbsp;pm
guid = 39580

URL:
http://groups.yahoo.com/group/hastings-freecycle/
noostu
edinburgh


SOURCE CODE:
<table class="ygrp-msgs" cellspacing="0" cellpadding="0">

<tr class="firstrow"> <td>
<div class="ygrp-msg"><a href="/group/hastings-freecycle/message/39580" class="ygrp-subj"><em>WANTED childrens puzzles</em></a>
<div class="ygrp-msgsum">hello there does anyone have any childrens puzzles? my 2 daughters are loving puzzles at the moment. i have searched the charity shops and not found any.</div>
</div>
<div class="ygrp-date smalltype">Posted - Thu Jan&nbsp;21,&nbsp;2010 1:20&nbsp;pm</div>
</td>
<td class="ygrp-author">
<span class="name">
<a href="http://profiles.yahoo.com/mummyb31">mummyb31</a> </span>
<br> <a href="ymsgr:sendIM?mummyb31" class="smalltype ygrp-nowrap" title="Offline"><img src="http://us.i1.yimg.com/us.yimg.com/i/mesg/notonline.gif" width="12" height="12" alt="Offline"> Offline</a>
<br> <a href="/group/hastings-freecycle/post?postID=M6k4sjKzm8zZ4qHgtkTxqUWHfrQ-sqHH5tZLQ2c45ZxrUl5PhvG0LpPU2EO1OEwFa0lriqpA9QOHSzWggPVS" class="smalltype ygrp-nowrap" title="Send Email"><img src="http://us.i1.yimg.com/us.yimg.com/i/yg/img/ui/sendemail.gif" width="12" height="12" alt="Send Email"> Send Email</a>
</td>
</tr>

</table>
